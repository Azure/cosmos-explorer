{"version":3,"file":"ChangeFeedPullModelIterator.js","sourceRoot":"","sources":["../../../../src/client/ChangeFeed/ChangeFeedPullModelIterator.ts"],"names":[],"mappings":"","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { Resource } from \"../Resource\";\nimport { ChangeFeedIteratorResponse } from \"./ChangeFeedIteratorResponse\";\n/**\n * Use `Items.getChangeFeedIterator()` to return an iterator that can iterate over all the changes for a partition key, feed range or an entire container.\n */\nexport interface ChangeFeedPullModelIterator<T> {\n  /**\n   * Always returns true, changefeed is an infinite stream.\n   */\n  readonly hasMoreResults: boolean;\n  /**\n   * Returns next set of results for the change feed.\n   */\n  readNext(): Promise<ChangeFeedIteratorResponse<Array<T & Resource>>>;\n  /**\n   * Gets an async iterator which will yield change feed results.\n   * @example Get changefeed for an entire container from now\n   * ```typescript\n   * const options = { changeFeedStartFrom: ChangeFeedStartFrom.Now() };\n   * for await(const res of container.items.getChangeFeedIterator(options).getAsyncIterator()) {\n   *   //process res\n   * }\n   * ```\n   */\n  getAsyncIterator(): AsyncIterable<ChangeFeedIteratorResponse<Array<T & Resource>>>;\n}\n"]}