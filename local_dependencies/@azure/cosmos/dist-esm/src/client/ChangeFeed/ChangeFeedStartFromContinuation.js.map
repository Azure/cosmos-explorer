{"version":3,"file":"ChangeFeedStartFromContinuation.js","sourceRoot":"","sources":["../../../../src/client/ChangeFeed/ChangeFeedStartFromContinuation.ts"],"names":[],"mappings":"AAAA,uCAAuC;AACvC,kCAAkC;AAClC,OAAO,EAAE,aAAa,EAAE,MAAM,eAAe,CAAC;AAC9C,OAAO,EAAE,sBAAsB,EAAE,MAAM,mBAAmB,CAAC;AAC3D;;;GAGG;AACH,MAAM,OAAO,+BAA+B;IAG1C,YAAY,YAAoB;QAC9B,IAAI,CAAC,iBAAiB,GAAG,YAAY,CAAC;IACxC,CAAC;IAEM,aAAa;QAClB,OAAO,IAAI,CAAC,iBAAiB,CAAC;IAChC,CAAC;IACM,iBAAiB;QACtB,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;IAC5C,CAAC;IAEM,eAAe;QACpB,MAAM,MAAM,GAAG,IAAI,CAAC,iBAAiB,EAAE,CAAC;QACxC,IACE,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,MAAM,EAAE,cAAc,CAAC;YAC5D,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,MAAM,EAAE,cAAc,CAAC;YAC5D,OAAO,MAAM,CAAC,YAAY,KAAK,QAAQ,EACvC;YACA,OAAO,sBAAsB,CAAC,YAAY,CAAC;SAC5C;aAAM,IACL,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,MAAM,EAAE,cAAc,CAAC;YAC5D,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,YAAY,CAAC;YAClC,MAAM,CAAC,YAAY,CAAC,MAAM,GAAG,CAAC,EAC9B;YACA,OAAO,sBAAsB,CAAC,SAAS,CAAC;SACzC;aAAM;YACL,MAAM,IAAI,aAAa,CAAC,6BAA6B,CAAC,CAAC;SACxD;IACH,CAAC;CACF","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { ErrorResponse } from \"../../request\";\nimport { ChangeFeedResourceType } from \"./ChangeFeedEnums\";\n/**\n * @hidden\n * Class which specifies the ChangeFeedIterator to start reading changes from a saved point.\n */\nexport class ChangeFeedStartFromContinuation {\n  private continuationToken: string;\n\n  constructor(continuation: string) {\n    this.continuationToken = continuation;\n  }\n\n  public getCfResource(): string {\n    return this.continuationToken;\n  }\n  public getCfResourceJson(): any {\n    return JSON.parse(this.continuationToken);\n  }\n\n  public getResourceType(): any {\n    const cToken = this.getCfResourceJson();\n    if (\n      Object.prototype.hasOwnProperty.call(cToken, \"partitionKey\") &&\n      Object.prototype.hasOwnProperty.call(cToken, \"Continuation\") &&\n      typeof cToken.Continuation === \"string\"\n    ) {\n      return ChangeFeedResourceType.PartitionKey;\n    } else if (\n      Object.prototype.hasOwnProperty.call(cToken, \"Continuation\") &&\n      Array.isArray(cToken.Continuation) &&\n      cToken.Continuation.length > 0\n    ) {\n      return ChangeFeedResourceType.FeedRange;\n    } else {\n      throw new ErrorResponse(\"Invalid continuation token.\");\n    }\n  }\n}\n"]}