{"version":3,"file":"IndexingPolicy.js","sourceRoot":"","sources":["../../../src/documents/IndexingPolicy.ts"],"names":[],"mappings":"AAiBA,4CAA4C;AAC5C,MAAM,CAAN,IAAY,WAKX;AALD,WAAY,WAAW;IACrB,wCAAyB,CAAA;IACzB,4CAA6B,CAAA;IAC7B,8BAAe,CAAA;IACf,kCAAmB,CAAA;AACrB,CAAC,EALW,WAAW,KAAX,WAAW,QAKtB","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { DataType, IndexingMode, IndexKind } from \"./index\";\n\nexport interface IndexingPolicy {\n  /** The indexing mode (consistent or lazy) {@link IndexingMode}. */\n  indexingMode?: keyof typeof IndexingMode;\n  automatic?: boolean;\n  /** An array of {@link IncludedPath} represents the paths to be included for indexing. */\n  includedPaths?: IndexedPath[];\n  /** An array of {@link IncludedPath} represents the paths to be excluded for indexing. */\n  excludedPaths?: IndexedPath[];\n  spatialIndexes?: SpatialIndex[];\n  /** An array of {@link VectorIndex} represents the vector index paths to be included for indexing. */\n  vectorIndexes?: VectorIndex[];\n}\n\n/* The target data type of a spatial path */\nexport enum SpatialType {\n  LineString = \"LineString\",\n  MultiPolygon = \"MultiPolygon\",\n  Point = \"Point\",\n  Polygon = \"Polygon\",\n}\n\nexport interface SpatialIndex {\n  /* Path in JSON document to index */\n  path: string;\n  types: SpatialType[];\n  /* Bounding box for geometry spatial path */\n  boundingBox: {\n    /* X-coordinate of the lower-left corner of the bounding box. */\n    xmin: number;\n    /* Y-coordinate of the lower-left corner of the bounding box. */\n    ymin: number;\n    /* X-coordinate of the upper-right corner of the bounding box. */\n    xmax: number;\n    /* Y-coordinate of the upper-right corner of the bounding box. */\n    ymax: number;\n  };\n}\n\nexport interface IndexedPath {\n  path: string;\n  indexes?: Index[];\n}\n\nexport interface Index {\n  kind: keyof typeof IndexKind;\n  dataType: keyof typeof DataType;\n  precision?: number;\n}\n/**\n * Represents a vector index in the Azure Cosmos DB service.\n * A vector index is used to index vector fields in the documents.\n */\nexport interface VectorIndex {\n  /**\n   * The path to the vector field in the document.\n   * for example, path: \"/path/to/vector\".\n   */\n  path: string;\n  /**\n   * The index type of the vector.\n   * Currently, flat, diskANN, and quantizedFlat are supported.\n   */\n  type: \"flat\" | \"diskANN\" | \"quantizedFlat\";\n}\n"]}