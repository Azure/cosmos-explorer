{"version":3,"file":"AverageAggregator.js","sourceRoot":"","sources":["../../../../src/queryExecutionContext/Aggregators/AverageAggregator.ts"],"names":[],"mappings":"AAUA,cAAc;AACd,MAAM,OAAO,iBAAiB;IAG5B;;OAEG;IACI,SAAS,CAAC,KAA6B;QAC5C,IAAI,KAAK,IAAI,IAAI,IAAI,KAAK,CAAC,GAAG,IAAI,IAAI,EAAE;YACtC,OAAO;SACR;QACD,IAAI,IAAI,CAAC,GAAG,IAAI,IAAI,EAAE;YACpB,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;YACf,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;SAChB;QACD,IAAI,CAAC,GAAG,IAAI,KAAK,CAAC,GAAG,CAAC;QACtB,IAAI,CAAC,KAAK,IAAI,KAAK,CAAC,KAAK,CAAC;IAC5B,CAAC;IAED;;OAEG;IACI,SAAS;QACd,IAAI,IAAI,CAAC,GAAG,IAAI,IAAI,IAAI,IAAI,CAAC,KAAK,IAAI,CAAC,EAAE;YACvC,OAAO,SAAS,CAAC;SAClB;QACD,OAAO,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC;IAC/B,CAAC;CACF","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { Aggregator } from \"./Aggregator\";\n\n/** @hidden */\nexport interface AverageAggregateResult {\n  sum: number;\n  count: number;\n}\n\n/** @hidden */\nexport class AverageAggregator implements Aggregator {\n  public sum: number;\n  public count: number;\n  /**\n   * Add the provided item to aggregation result.\n   */\n  public aggregate(other: AverageAggregateResult): void {\n    if (other == null || other.sum == null) {\n      return;\n    }\n    if (this.sum == null) {\n      this.sum = 0.0;\n      this.count = 0;\n    }\n    this.sum += other.sum;\n    this.count += other.count;\n  }\n\n  /**\n   * Get the aggregation result.\n   */\n  public getResult(): number {\n    if (this.sum == null || this.count <= 0) {\n      return undefined;\n    }\n    return this.sum / this.count;\n  }\n}\n"]}