{"version":3,"file":"SharedOptions.js","sourceRoot":"","sources":["../../../src/request/SharedOptions.ts"],"names":[],"mappings":"","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n/// <reference lib=\"dom\" />\nimport { PriorityLevel } from \"../documents/PriorityLevel\";\nimport { CosmosHeaders } from \"../index\";\nimport { AbortSignal } from \"node-abort-controller\";\n\n/**\n * Options that can be specified for a requested issued to the Azure Cosmos DB servers.=\n */\nexport interface SharedOptions {\n  /** Enables/disables getting document container quota related stats for document container read requests. */\n  sessionToken?: string;\n  /** (Advanced use case) Initial headers to start with when sending requests to Cosmos */\n  initialHeaders?: CosmosHeaders;\n  /**\n   * abortSignal to pass to all underlying network requests created by this method call. See https://developer.mozilla.org/en-US/docs/Web/API/AbortController\n   * @example Cancel a read request\n   * ```typescript\n   * const controller = new AbortController()\n   * const {result: item} = await items.query('SELECT * from c', { abortSignal: controller.signal});\n   * controller.abort()\n   * ```\n   */\n  abortSignal?: AbortSignal;\n  /**\n   * Sets the staleness value associated with the request in the Azure CosmosDB service. For requests where the {@link\n   * com.azure.cosmos.ConsistencyLevel} is {@link com.azure.cosmos.ConsistencyLevel#EVENTUAL}  or {@link com.azure.cosmos.ConsistencyLevel#SESSION}, responses from the\n   * integrated cache are guaranteed to be no staler than value indicated by this maxIntegratedCacheStaleness. When the\n   * consistency level is not set, this property is ignored.\n   *\n   * <p>Default value is null</p>\n   *\n   * <p>Cache Staleness is supported in milliseconds granularity. Anything smaller than milliseconds will be ignored.</p>\n   */\n  maxIntegratedCacheStalenessInMs?: number;\n\n  /**\n   * Priority Level (Low/High) for each request.\n   * Low priority requests are always throttled before any high priority requests.\n   *\n   * <p>Default value is null. By default all requests are of High priority</p>\n   */\n  priorityLevel?: PriorityLevel;\n}\n"]}