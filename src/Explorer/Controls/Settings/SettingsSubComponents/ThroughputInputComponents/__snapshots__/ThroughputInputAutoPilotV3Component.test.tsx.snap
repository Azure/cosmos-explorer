// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ThroughputInputAutoPilotV3Component autopilot input visible 1`] = `
<Stack
  tokens={
    Object {
      "childrenGap": 10,
    }
  }
>
  <Stack>
    <StyledLabelBase
      id="settingsV2RadioButtonLabelId"
    >
      <ToolTipLabelComponent
        label="label"
        toolTipElement={
          <Text
            styles={
              Object {
                "root": Object {
                  "fontSize": 12,
                },
              }
            }
          >
            infoBubbleText
          </Text>
        }
      />
    </StyledLabelBase>
    <StyledMessageBarBase
      messageBarType={5}
      styles={
        Object {
          "root": Object {
            "marginTop": "5px",
          },
        }
      }
    >
      <Text
        id="manualToAutoscaleDisclaimerElement"
        styles={
          Object {
            "root": Object {
              "fontSize": 12,
            },
          }
        }
      >
        The starting autoscale max RU/s will be determined by the system, based on the current manual throughput settings and storage of your resource. After autoscale has been enabled, you can change the max RU/s.
         
        <a
          href="https://aka.ms/cosmos-autoscale-migration"
        >
          Learn more
        </a>
      </Text>
    </StyledMessageBarBase>
    <StyledChoiceGroupBase
      ariaLabelledBy="settingsV2RadioButtonLabelId"
      onChange={[Function]}
      options={
        Array [
          Object {
            "key": "true",
            "text": "Autoscale",
          },
          Object {
            "key": "false",
            "text": "Manual",
          },
        ]
      }
      required={true}
      selectedKey="true"
      styles={
        Object {
          "flexContainer": Array [
            Object {
              "selectors": Object {
                ".ms-ChoiceField-field.is-checked::after": Object {
                  "borderColor": "",
                },
                ".ms-ChoiceField-field.is-checked::before": Object {
                  "borderColor": "",
                },
                ".ms-ChoiceField-wrapper label": Object {
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "padding": "2px 5px",
                  "whiteSpace": "nowrap",
                },
              },
            },
          ],
        }
      }
    />
  </Stack>
  <Text>
    Provision maximum RU/s required by this resource. Estimate your required RU/s with
    <StyledLinkBase
      href="https://cosmos.azure.com/capacitycalculator/"
      target="_blank"
    >
       capacity calculator
    </StyledLinkBase>
  </Text>
  <StyledTextFieldBase
    disabled={true}
    id="autopilotInput"
    key="auto pilot throughput input"
    label="Max RU/s"
    min={4000}
    onChange={[Function]}
    required={true}
    step={100}
    styles={
      Object {
        "fieldGroup": Object {
          "borderColor": "",
          "height": 25,
          "selectors": Object {
            ":disabled": Object {
              "backgroundColor": undefined,
              "borderColor": undefined,
            },
          },
          "width": 300,
        },
      }
    }
    type="number"
    value=""
  />
</Stack>
`;

exports[`ThroughputInputAutoPilotV3Component spendAck checkbox visible 1`] = `
<Stack
  tokens={
    Object {
      "childrenGap": 10,
    }
  }
>
  <Stack>
    <StyledLabelBase
      id="settingsV2RadioButtonLabelId"
    >
      <ToolTipLabelComponent
        label="label"
        toolTipElement={
          <Text
            styles={
              Object {
                "root": Object {
                  "fontSize": 12,
                },
              }
            }
          >
            infoBubbleText
          </Text>
        }
      />
    </StyledLabelBase>
    <StyledChoiceGroupBase
      ariaLabelledBy="settingsV2RadioButtonLabelId"
      onChange={[Function]}
      options={
        Array [
          Object {
            "key": "true",
            "text": "Autoscale",
          },
          Object {
            "key": "false",
            "text": "Manual",
          },
        ]
      }
      required={true}
      selectedKey="false"
      styles={
        Object {
          "flexContainer": Array [
            Object {
              "selectors": Object {
                ".ms-ChoiceField-field.is-checked::after": Object {
                  "borderColor": "",
                },
                ".ms-ChoiceField-field.is-checked::before": Object {
                  "borderColor": "",
                },
                ".ms-ChoiceField-wrapper label": Object {
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "padding": "2px 5px",
                  "whiteSpace": "nowrap",
                },
              },
            },
          ],
        }
      }
    />
  </Stack>
  <Stack
    tokens={
      Object {
        "childrenGap": 5,
      }
    }
  >
    <StyledTextFieldBase
      disabled={false}
      id="throughputInput"
      key="provisioned throughput input"
      min={10000}
      onChange={[Function]}
      required={true}
      step={100}
      styles={
        Object {
          "fieldGroup": Object {
            "borderColor": "",
            "height": 25,
            "selectors": Object {
              ":disabled": Object {
                "backgroundColor": undefined,
                "borderColor": undefined,
              },
            },
            "width": 300,
          },
        }
      }
      type="number"
      value="100"
    />
    <Text
      id="throughputSpendElement"
    >
      Estimated cost (
      USD
      ):
       
      <b>
        $
        0.0080
         hourly 
         / 
        $
        0.19
         daily 
         / 
        $
        5.84
         monthly
         
      </b>
      (
      regions: 
       
      1
      , 
      100
      RU/s, 
      $
      0.00008
      /RU)
    </Text>
    <StyledCheckboxBase
      checked={false}
      id="spendAckCheckBox"
      label="spendAckText"
      onChange={[Function]}
      styles={
        Object {
          "label": Object {
            "margin": 0,
            "padding": "2 0 2 0",
          },
          "text": Object {
            "fontSize": 12,
          },
        }
      }
    />
  </Stack>
</Stack>
`;

exports[`ThroughputInputAutoPilotV3Component throughput input visible 1`] = `
<Stack
  tokens={
    Object {
      "childrenGap": 10,
    }
  }
>
  <Stack>
    <StyledLabelBase
      id="settingsV2RadioButtonLabelId"
    >
      <ToolTipLabelComponent
        label="label"
        toolTipElement={
          <Text
            styles={
              Object {
                "root": Object {
                  "fontSize": 12,
                },
              }
            }
          >
            infoBubbleText
          </Text>
        }
      />
    </StyledLabelBase>
    <StyledChoiceGroupBase
      ariaLabelledBy="settingsV2RadioButtonLabelId"
      onChange={[Function]}
      options={
        Array [
          Object {
            "key": "true",
            "text": "Autoscale",
          },
          Object {
            "key": "false",
            "text": "Manual",
          },
        ]
      }
      required={true}
      selectedKey="false"
      styles={
        Object {
          "flexContainer": Array [
            Object {
              "selectors": Object {
                ".ms-ChoiceField-field.is-checked::after": Object {
                  "borderColor": "",
                },
                ".ms-ChoiceField-field.is-checked::before": Object {
                  "borderColor": "",
                },
                ".ms-ChoiceField-wrapper label": Object {
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "padding": "2px 5px",
                  "whiteSpace": "nowrap",
                },
              },
            },
          ],
        }
      }
    />
  </Stack>
  <Stack
    tokens={
      Object {
        "childrenGap": 5,
      }
    }
  >
    <StyledTextFieldBase
      disabled={false}
      id="throughputInput"
      key="provisioned throughput input"
      min={10000}
      onChange={[Function]}
      required={true}
      step={100}
      styles={
        Object {
          "fieldGroup": Object {
            "borderColor": "",
            "height": 25,
            "selectors": Object {
              ":disabled": Object {
                "backgroundColor": undefined,
                "borderColor": undefined,
              },
            },
            "width": 300,
          },
        }
      }
      type="number"
      value="100"
    />
    <Text
      id="throughputSpendElement"
    >
      Estimated cost (
      USD
      ):
       
      <b>
        $
        0.0080
         hourly 
         / 
        $
        0.19
         daily 
         / 
        $
        5.84
         monthly
         
      </b>
      (
      regions: 
       
      1
      , 
      100
      RU/s, 
      $
      0.00008
      /RU)
    </Text>
  </Stack>
</Stack>
`;
