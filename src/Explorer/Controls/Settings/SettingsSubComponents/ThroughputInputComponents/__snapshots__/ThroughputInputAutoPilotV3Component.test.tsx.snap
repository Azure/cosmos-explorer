// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ThroughputInputAutoPilotV3Component autopilot input visible 1`] = `
<Stack
  tokens={
    Object {
      "childrenGap": 10,
    }
  }
>
  <StyledMessageBar
    messageBarIconProps={
      Object {
        "className": "messageBarWarningIcon",
        "iconName": "WarningSolid",
      }
    }
  >
    <Text
      styles={
        Object {
          "root": Object {
            "fontSize": 14,
          },
        }
      }
    >
      Your bill will be affected as you update your throughput settings. Please review the updated cost estimate below before saving your changes
    </Text>
  </StyledMessageBar>
  <Stack>
    <StyledLabelBase
      id="settingsV2RadioButtonLabelId"
    >
      <ToolTipLabelComponent
        label="label"
        toolTipElement={
          <Text
            styles={
              Object {
                "root": Object {
                  "fontSize": 14,
                },
              }
            }
          >
            infoBubbleText
          </Text>
        }
      />
    </StyledLabelBase>
    <StyledMessageBar
      messageBarIconProps={
        Object {
          "className": "messageBarInfoIcon",
          "iconName": "InfoSolid",
        }
      }
      styles={
        Object {
          "root": Object {
            "backgroundColor": "white",
            "marginTop": "5px",
          },
          "text": Object {
            "fontSize": 14,
          },
        }
      }
    >
      <Text
        id="manualToAutoscaleDisclaimerElement"
        styles={
          Object {
            "root": Object {
              "fontSize": 14,
            },
          }
        }
      >
        The starting autoscale max RU/s will be determined by the system, based on the current manual throughput settings and storage of your resource. After autoscale has been enabled, you can change the max RU/s.
         
        <a
          href="https://aka.ms/cosmos-autoscale-migration"
        >
          Learn more
        </a>
      </Text>
    </StyledMessageBar>
    <StyledChoiceGroup
      ariaLabelledBy="settingsV2RadioButtonLabelId"
      onChange={[Function]}
      options={
        Array [
          Object {
            "key": "true",
            "text": "Autoscale",
          },
          Object {
            "key": "false",
            "text": "Manual",
          },
        ]
      }
      required={true}
      selectedKey="true"
      styles={
        Object {
          "flexContainer": Array [
            Object {
              "selectors": Object {
                ".ms-ChoiceField-field.is-checked::after": Object {
                  "borderColor": undefined,
                },
                ".ms-ChoiceField-field.is-checked::before": Object {
                  "borderColor": undefined,
                },
                ".ms-ChoiceField-wrapper label": Object {
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "padding": "2px 5px",
                  "whiteSpace": "nowrap",
                },
              },
            },
          ],
        }
      }
    />
  </Stack>
  <Text>
    Provision maximum RU/s required by this resource. Estimate your required RU/s with
    <StyledLinkBase
      href="https://cosmos.azure.com/capacitycalculator/"
      target="_blank"
    >
       capacity calculator
    </StyledLinkBase>
  </Text>
  <StyledTextFieldBase
    disabled={true}
    id="autopilotInput"
    key="auto pilot throughput input"
    label="Max RU/s"
    min={4000}
    onChange={[Function]}
    required={true}
    step={1000}
    styles={
      Object {
        "fieldGroup": Object {
          "borderColor": "",
          "height": 25,
          "selectors": Object {
            ":disabled": Object {
              "backgroundColor": undefined,
              "borderColor": undefined,
            },
          },
          "width": 300,
        },
      }
    }
    type="number"
    value=""
  />
</Stack>
`;

exports[`ThroughputInputAutoPilotV3Component spendAck checkbox visible 1`] = `
<Stack
  tokens={
    Object {
      "childrenGap": 10,
    }
  }
>
  <Stack>
    <StyledLabelBase
      id="settingsV2RadioButtonLabelId"
    >
      <ToolTipLabelComponent
        label="label"
        toolTipElement={
          <Text
            styles={
              Object {
                "root": Object {
                  "fontSize": 14,
                },
              }
            }
          >
            infoBubbleText
          </Text>
        }
      />
    </StyledLabelBase>
    <StyledChoiceGroup
      ariaLabelledBy="settingsV2RadioButtonLabelId"
      onChange={[Function]}
      options={
        Array [
          Object {
            "key": "true",
            "text": "Autoscale",
          },
          Object {
            "key": "false",
            "text": "Manual",
          },
        ]
      }
      required={true}
      selectedKey="false"
      styles={
        Object {
          "flexContainer": Array [
            Object {
              "selectors": Object {
                ".ms-ChoiceField-field.is-checked::after": Object {
                  "borderColor": "",
                },
                ".ms-ChoiceField-field.is-checked::before": Object {
                  "borderColor": "",
                },
                ".ms-ChoiceField-wrapper label": Object {
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "padding": "2px 5px",
                  "whiteSpace": "nowrap",
                },
              },
            },
          ],
        }
      }
    />
  </Stack>
  <Stack
    tokens={
      Object {
        "childrenGap": 5,
      }
    }
  >
    <Text>
      Estimate your required throughput with
      <StyledLinkBase
        href="https://cosmos.azure.com/capacitycalculator/"
        target="_blank"
      >
         capacity calculator
         
        <FontIcon
          iconName="NavigateExternalInline"
        />
      </StyledLinkBase>
    </Text>
    <StyledTextFieldBase
      disabled={false}
      id="throughputInput"
      key="provisioned throughput input"
      min={10000}
      onChange={[Function]}
      required={true}
      step={100}
      styles={
        Object {
          "fieldGroup": Object {
            "borderColor": "",
            "height": 25,
            "selectors": Object {
              ":disabled": Object {
                "backgroundColor": undefined,
                "borderColor": undefined,
              },
            },
            "width": 300,
          },
        }
      }
      type="number"
      value="100"
    />
    <Stack
      styles={
        Object {
          "root": Object {
            "width": 600,
          },
        }
      }
      tokens={
        Object {
          "childrenGap": 10,
        }
      }
    >
      <StyledWithViewportComponent
        columns={
          Array [
            Object {
              "fieldName": "costType",
              "isResizable": true,
              "key": "costType",
              "maxWidth": 200,
              "minWidth": 100,
              "name": "",
              "styles": Object {
                "root": Object {
                  "selectors": Object {
                    ":hover": Object {
                      "background": "transparent",
                    },
                  },
                },
              },
            },
            Object {
              "fieldName": "hourly",
              "isResizable": true,
              "key": "hourly",
              "maxWidth": 200,
              "minWidth": 100,
              "name": "Hourly",
              "styles": Object {
                "root": Object {
                  "selectors": Object {
                    ":hover": Object {
                      "background": "transparent",
                    },
                  },
                },
              },
            },
            Object {
              "fieldName": "daily",
              "isResizable": true,
              "key": "daily",
              "maxWidth": 200,
              "minWidth": 100,
              "name": "Daily",
              "styles": Object {
                "root": Object {
                  "selectors": Object {
                    ":hover": Object {
                      "background": "transparent",
                    },
                  },
                },
              },
            },
            Object {
              "fieldName": "monthly",
              "isResizable": true,
              "key": "monthly",
              "maxWidth": 200,
              "minWidth": 100,
              "name": "Monthly",
              "styles": Object {
                "root": Object {
                  "selectors": Object {
                    ":hover": Object {
                      "background": "transparent",
                    },
                  },
                },
              },
            },
          ]
        }
        disableSelectionZone={true}
        items={
          Array [
            Object {
              "costType": <Text>
                Current Cost
              </Text>,
              "daily": <Text>
                $
                 
                0.19
              </Text>,
              "hourly": <Text>
                $
                 
                0.0080
              </Text>,
              "monthly": <Text>
                $
                 
                5.84
              </Text>,
            },
          ]
        }
        layoutMode={1}
        onRenderRow={[Function]}
        selectionMode={0}
      />
      <Text
        id="throughputSpendElement"
      >
        (
        regions: 
         
        1
        , 
        100
         RU/s, 
        $
        0.00008
        /RU)
      </Text>
      <Text>
        <em>
          This cost is an estimate and may vary based on the regions where your account is deployed and potential discounts applied to your account
        </em>
      </Text>
    </Stack>
    <StyledCheckboxBase
      checked={false}
      id="spendAckCheckBox"
      label="spendAckText"
      onChange={[Function]}
      styles={
        Object {
          "label": Object {
            "margin": 0,
            "padding": "2 0 2 0",
          },
          "text": Object {
            "fontSize": 12,
          },
        }
      }
    />
    <br />
  </Stack>
</Stack>
`;

exports[`ThroughputInputAutoPilotV3Component throughput input visible 1`] = `
<Stack
  tokens={
    Object {
      "childrenGap": 10,
    }
  }
>
  <Stack>
    <StyledLabelBase
      id="settingsV2RadioButtonLabelId"
    >
      <ToolTipLabelComponent
        label="label"
        toolTipElement={
          <Text
            styles={
              Object {
                "root": Object {
                  "fontSize": 14,
                },
              }
            }
          >
            infoBubbleText
          </Text>
        }
      />
    </StyledLabelBase>
    <StyledChoiceGroup
      ariaLabelledBy="settingsV2RadioButtonLabelId"
      onChange={[Function]}
      options={
        Array [
          Object {
            "key": "true",
            "text": "Autoscale",
          },
          Object {
            "key": "false",
            "text": "Manual",
          },
        ]
      }
      required={true}
      selectedKey="false"
      styles={
        Object {
          "flexContainer": Array [
            Object {
              "selectors": Object {
                ".ms-ChoiceField-field.is-checked::after": Object {
                  "borderColor": "",
                },
                ".ms-ChoiceField-field.is-checked::before": Object {
                  "borderColor": "",
                },
                ".ms-ChoiceField-wrapper label": Object {
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "padding": "2px 5px",
                  "whiteSpace": "nowrap",
                },
              },
            },
          ],
        }
      }
    />
  </Stack>
  <Stack
    tokens={
      Object {
        "childrenGap": 5,
      }
    }
  >
    <Text>
      Estimate your required throughput with
      <StyledLinkBase
        href="https://cosmos.azure.com/capacitycalculator/"
        target="_blank"
      >
         capacity calculator
         
        <FontIcon
          iconName="NavigateExternalInline"
        />
      </StyledLinkBase>
    </Text>
    <StyledTextFieldBase
      disabled={false}
      id="throughputInput"
      key="provisioned throughput input"
      min={10000}
      onChange={[Function]}
      required={true}
      step={100}
      styles={
        Object {
          "fieldGroup": Object {
            "borderColor": "",
            "height": 25,
            "selectors": Object {
              ":disabled": Object {
                "backgroundColor": undefined,
                "borderColor": undefined,
              },
            },
            "width": 300,
          },
        }
      }
      type="number"
      value="100"
    />
    <Stack
      styles={
        Object {
          "root": Object {
            "width": 600,
          },
        }
      }
      tokens={
        Object {
          "childrenGap": 10,
        }
      }
    >
      <StyledWithViewportComponent
        columns={
          Array [
            Object {
              "fieldName": "costType",
              "isResizable": true,
              "key": "costType",
              "maxWidth": 200,
              "minWidth": 100,
              "name": "",
              "styles": Object {
                "root": Object {
                  "selectors": Object {
                    ":hover": Object {
                      "background": "transparent",
                    },
                  },
                },
              },
            },
            Object {
              "fieldName": "hourly",
              "isResizable": true,
              "key": "hourly",
              "maxWidth": 200,
              "minWidth": 100,
              "name": "Hourly",
              "styles": Object {
                "root": Object {
                  "selectors": Object {
                    ":hover": Object {
                      "background": "transparent",
                    },
                  },
                },
              },
            },
            Object {
              "fieldName": "daily",
              "isResizable": true,
              "key": "daily",
              "maxWidth": 200,
              "minWidth": 100,
              "name": "Daily",
              "styles": Object {
                "root": Object {
                  "selectors": Object {
                    ":hover": Object {
                      "background": "transparent",
                    },
                  },
                },
              },
            },
            Object {
              "fieldName": "monthly",
              "isResizable": true,
              "key": "monthly",
              "maxWidth": 200,
              "minWidth": 100,
              "name": "Monthly",
              "styles": Object {
                "root": Object {
                  "selectors": Object {
                    ":hover": Object {
                      "background": "transparent",
                    },
                  },
                },
              },
            },
          ]
        }
        disableSelectionZone={true}
        items={
          Array [
            Object {
              "costType": <Text>
                Current Cost
              </Text>,
              "daily": <Text>
                $
                 
                0.19
              </Text>,
              "hourly": <Text>
                $
                 
                0.0080
              </Text>,
              "monthly": <Text>
                $
                 
                5.84
              </Text>,
            },
          ]
        }
        layoutMode={1}
        onRenderRow={[Function]}
        selectionMode={0}
      />
      <Text
        id="throughputSpendElement"
      >
        (
        regions: 
         
        1
        , 
        100
         RU/s, 
        $
        0.00008
        /RU)
      </Text>
      <Text>
        <em>
          This cost is an estimate and may vary based on the regions where your account is deployed and potential discounts applied to your account
        </em>
      </Text>
    </Stack>
    <br />
  </Stack>
</Stack>
`;
