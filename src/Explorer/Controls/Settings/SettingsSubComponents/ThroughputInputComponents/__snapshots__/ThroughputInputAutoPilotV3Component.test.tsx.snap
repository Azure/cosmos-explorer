// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ThroughputInputAutoPilotV3Component autopilot input visible 1`] = `
<Stack
  tokens={
    Object {
      "childrenGap": 10,
    }
  }
>
  <StyledMessageBar
    messageBarIconProps={
      Object {
        "className": "messageBarWarningIcon",
        "iconName": "WarningSolid",
      }
    }
    role="alert"
  >
    <Text
      styles={
        Object {
          "root": Object {
            "color": "windowtext",
            "fontSize": 14,
          },
        }
      }
    >
      Your bill will be affected as you update your throughput settings. Please review the updated cost estimate below before saving your changes
    </Text>
  </StyledMessageBar>
  <Stack>
    <StyledLabelBase
      id="settingsV2RadioButtonLabelId"
    >
      <ToolTipLabelComponent
        label="label"
        toolTipElement={
          <Text
            styles={
              Object {
                "root": Object {
                  "color": "windowtext",
                  "fontSize": 14,
                },
              }
            }
          >
            infoBubbleText
          </Text>
        }
      />
    </StyledLabelBase>
    <StyledMessageBar
      messageBarIconProps={
        Object {
          "className": "messageBarInfoIcon",
          "iconName": "InfoSolid",
        }
      }
      styles={
        Object {
          "root": Object {
            "backgroundColor": "white",
            "marginTop": "5px",
          },
          "text": Object {
            "fontSize": 14,
          },
        }
      }
    >
      <Text
        id="manualToAutoscaleDisclaimerElement"
        styles={
          Object {
            "root": Object {
              "color": "windowtext",
              "fontSize": 14,
            },
          }
        }
      >
        The starting autoscale max RU/s will be determined by the system, based on the current manual throughput settings and storage of your resource. After autoscale has been enabled, you can change the max RU/s.
         
        <StyledLinkBase
          href="https://aka.ms/cosmos-autoscale-migration"
        >
          Learn more
        </StyledLinkBase>
      </Text>
    </StyledMessageBar>
    <StyledChoiceGroup
      ariaLabelledBy="settingsV2RadioButtonLabelId"
      onChange={[Function]}
      options={
        Array [
          Object {
            "key": "true",
            "text": "Autoscale",
          },
          Object {
            "key": "false",
            "text": "Manual",
          },
        ]
      }
      required={true}
      selectedKey="true"
      styles={
        Object {
          "flexContainer": Array [
            Object {
              "columnGap": "30px",
              "display": "inline-flex",
              "selectors": Object {
                ".ms-ChoiceField-field.is-checked::after": Object {
                  "borderColor": undefined,
                },
                ".ms-ChoiceField-field.is-checked::before": Object {
                  "borderColor": undefined,
                },
                ".ms-ChoiceField-wrapper label": Object {
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "padding": "2px 5px",
                  "whiteSpace": "nowrap",
                },
              },
            },
          ],
        }
      }
    />
  </Stack>
  <Stack
    horizontal={true}
  >
    <StackItem
      style={
        Object {
          "maxWidth": "700px",
          "width": "70%",
        }
      }
    >
      <Stack
        style={
          Object {
            "paddingRight": "50px",
          }
        }
        tokens={
          Object {
            "childrenGap": 20,
          }
        }
      >
        <StackItem>
          <StyledTextFieldBase
            disabled={true}
            id="autopilotInput"
            key="auto pilot throughput input"
            label="Maximum RU/s required by this resource"
            min={1000}
            onChange={[Function]}
            onGetErrorMessage={[Function]}
            required={true}
            step={1000}
            styles={
              Object {
                "fieldGroup": Object {
                  "borderColor": "",
                  "height": 25,
                  "selectors": Object {
                    ":disabled": Object {
                      "backgroundColor": undefined,
                      "borderColor": undefined,
                    },
                  },
                  "width": 300,
                },
              }
            }
            type="number"
            validateOnLoad={false}
            value=""
          />
        </StackItem>
        <StackItem>
          <Stack>
            <Stack
              horizontal={true}
            >
              <StackItem
                style={
                  Object {
                    "width": "34%",
                  }
                }
              >
                <span>
                  10000
                </span>
              </StackItem>
              <StackItem
                style={
                  Object {
                    "width": "66%",
                  }
                }
              >
                <span
                  style={
                    Object {
                      "float": "left",
                      "transform": "translateX(-50%)",
                    }
                  }
                >
                  5000
                </span>
                <span
                  style={
                    Object {
                      "float": "right",
                    }
                  }
                >
                  1000000
                </span>
              </StackItem>
            </Stack>
            <StyledProgressIndicatorBase
              barHeight={20}
              percentComplete={0}
              styles={
                Object {
                  "progressBar": Array [
                    Object {
                      "backgroundColor": "rgb(251, 217, 203)",
                    },
                  ],
                }
              }
            />
            <Stack
              horizontal={true}
            >
              <StackItem
                style={
                  Object {
                    "paddingRight": "5px",
                    "width": "34%",
                  }
                }
              >
                <Separator
                  styles={
                    Object {
                      "root": Array [
                        Object {
                          "selectors": Object {
                            "::before": Object {
                              "backgroundColor": "rgb(200, 200, 200)",
                              "height": "3px",
                              "marginTop": "-1px",
                            },
                          },
                        },
                      ],
                    }
                  }
                >
                  Instant
                </Separator>
              </StackItem>
              <StackItem
                style={
                  Object {
                    "paddingLeft": "5px",
                    "width": "66%",
                  }
                }
              >
                <Separator
                  styles={
                    Object {
                      "root": Array [
                        Object {
                          "selectors": Object {
                            "::before": Object {
                              "backgroundColor": "rgb(200, 200, 200)",
                              "height": "3px",
                              "marginTop": "-1px",
                            },
                          },
                        },
                      ],
                    }
                  }
                >
                  4-6 hrs
                </Separator>
              </StackItem>
            </Stack>
          </Stack>
        </StackItem>
        <StackItem>
          <StyledMessageBar
            messageBarType={3}
          >
            <Text
              styles={
                Object {
                  "root": Object {
                    "color": "windowtext",
                    "fontSize": 14,
                  },
                }
              }
            >
              You are not able to lower throughput below your current minimum of 
              10000
               RU/s. For more information on this limit, please refer to our service quote documentation.
              <StyledLinkBase
                href="https://learn.microsoft.com/en-us/azure/cosmos-db/concepts-limits#minimum-throughput-limits"
                target="_blank"
              >
                Learn more
              </StyledLinkBase>
            </Text>
          </StyledMessageBar>
        </StackItem>
        <StackItem>
          <Text>
            Based on usage, your 
            container
             throughput will scale from
             
            <b>
              400
               RU/s (10% of max RU/s) -
               
              4000
               RU/s
            </b>
            <br />
          </Text>
        </StackItem>
        <StackItem />
        <StackItem />
        <StackItem />
      </Stack>
    </StackItem>
    <StackItem
      style={
        Object {
          "maxWidth": "300px",
          "width": "30%",
        }
      }
    >
      <Stack>
        <Text
          style={
            Object {
              "fontWeight": 600,
            }
          }
        >
          Cost estimate*
        </Text>
        <Stack
          style={
            Object {
              "marginTop": 15,
            }
          }
          tokens={
            Object {
              "childrenGap": 10,
            }
          }
        >
          <div>
            <Text
              style={
                Object {
                  "fontWeight": 600,
                }
              }
            >
              Updated cost per month
            </Text>
            <Stack
              horizontal={true}
              style={
                Object {
                  "marginBottom": 10,
                  "marginTop": 5,
                }
              }
            >
              <Text
                style={
                  Object {
                    "width": "50%",
                  }
                }
              >
                $
                 
                35.04
                 min
              </Text>
              <Text
                style={
                  Object {
                    "width": "50%",
                  }
                }
              >
                $
                 
                350.40
                 max
              </Text>
            </Stack>
          </div>
          <Text
            style={
              Object {
                "fontWeight": 600,
              }
            }
          >
            Current cost per month
          </Text>
          <Stack
            horizontal={true}
            style={
              Object {
                "marginTop": 5,
              }
            }
          >
            <Text
              style={
                Object {
                  "width": "50%",
                }
              }
            >
              $
               
              35.04
               min
            </Text>
            <Text
              style={
                Object {
                  "width": "50%",
                }
              }
            >
              $
               
              350.40
               max
            </Text>
          </Stack>
        </Stack>
        <Text
          style={
            Object {
              "fontWeight": 600,
              "marginTop": 15,
            }
          }
        >
          How we calculate this
        </Text>
        <Stack
          id="throughputSpendElement"
          style={
            Object {
              "marginTop": 5,
            }
          }
        >
          <span>
            1
             region
          </span>
          <span>
            400 RU/s - 
            4000
             RU/s
          </span>
          <span>
            $
            0.00012
            /RU
          </span>
        </Stack>
        <Text
          style={
            Object {
              "marginTop": 15,
            }
          }
        >
          <em>
            *
            This cost is an estimate and may vary based on the regions where your account is deployed and potential discounts applied to your account
          </em>
        </Text>
      </Stack>
    </StackItem>
  </Stack>
</Stack>
`;

exports[`ThroughputInputAutoPilotV3Component spendAck checkbox visible 1`] = `
<Stack
  tokens={
    Object {
      "childrenGap": 10,
    }
  }
>
  <Stack>
    <StyledLabelBase
      id="settingsV2RadioButtonLabelId"
    >
      <ToolTipLabelComponent
        label="label"
        toolTipElement={
          <Text
            styles={
              Object {
                "root": Object {
                  "color": "windowtext",
                  "fontSize": 14,
                },
              }
            }
          >
            infoBubbleText
          </Text>
        }
      />
    </StyledLabelBase>
    <StyledChoiceGroup
      ariaLabelledBy="settingsV2RadioButtonLabelId"
      onChange={[Function]}
      options={
        Array [
          Object {
            "key": "true",
            "text": "Autoscale",
          },
          Object {
            "key": "false",
            "text": "Manual",
          },
        ]
      }
      required={true}
      selectedKey="false"
      styles={
        Object {
          "flexContainer": Array [
            Object {
              "columnGap": "30px",
              "display": "inline-flex",
              "selectors": Object {
                ".ms-ChoiceField-field.is-checked::after": Object {
                  "borderColor": "",
                },
                ".ms-ChoiceField-field.is-checked::before": Object {
                  "borderColor": "",
                },
                ".ms-ChoiceField-wrapper label": Object {
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "padding": "2px 5px",
                  "whiteSpace": "nowrap",
                },
              },
            },
          ],
        }
      }
    />
  </Stack>
  <Stack
    horizontal={true}
  >
    <StackItem
      style={
        Object {
          "maxWidth": "700px",
          "width": "70%",
        }
      }
    >
      <Stack
        style={
          Object {
            "paddingRight": "50px",
          }
        }
        tokens={
          Object {
            "childrenGap": 20,
          }
        }
      >
        <StackItem>
          <StyledTextFieldBase
            disabled={false}
            id="throughputInput"
            key="provisioned throughput input"
            min={10000}
            onChange={[Function]}
            required={true}
            step={100}
            styles={
              Object {
                "fieldGroup": Object {
                  "borderColor": "",
                  "height": 25,
                  "selectors": Object {
                    ":disabled": Object {
                      "backgroundColor": undefined,
                      "borderColor": undefined,
                    },
                  },
                  "width": 300,
                },
              }
            }
            type="number"
            value="100"
          />
        </StackItem>
        <StackItem>
          <Stack>
            <Stack
              horizontal={true}
            >
              <StackItem
                style={
                  Object {
                    "width": "34%",
                  }
                }
              >
                <span>
                  10000
                </span>
              </StackItem>
              <StackItem
                style={
                  Object {
                    "width": "66%",
                  }
                }
              >
                <span
                  style={
                    Object {
                      "float": "left",
                      "transform": "translateX(-50%)",
                    }
                  }
                >
                  5000
                </span>
                <span
                  style={
                    Object {
                      "float": "right",
                    }
                  }
                >
                  1000000
                </span>
              </StackItem>
            </Stack>
            <StyledProgressIndicatorBase
              barHeight={20}
              percentComplete={0}
              styles={
                Object {
                  "progressBar": Array [
                    Object {
                      "backgroundColor": "rgb(251, 217, 203)",
                    },
                  ],
                }
              }
            />
            <Stack
              horizontal={true}
            >
              <StackItem
                style={
                  Object {
                    "paddingRight": "5px",
                    "width": "34%",
                  }
                }
              >
                <Separator
                  styles={
                    Object {
                      "root": Array [
                        Object {
                          "selectors": Object {
                            "::before": Object {
                              "backgroundColor": "rgb(200, 200, 200)",
                              "height": "3px",
                              "marginTop": "-1px",
                            },
                          },
                        },
                      ],
                    }
                  }
                >
                  Instant
                </Separator>
              </StackItem>
              <StackItem
                style={
                  Object {
                    "paddingLeft": "5px",
                    "width": "66%",
                  }
                }
              >
                <Separator
                  styles={
                    Object {
                      "root": Array [
                        Object {
                          "selectors": Object {
                            "::before": Object {
                              "backgroundColor": "rgb(200, 200, 200)",
                              "height": "3px",
                              "marginTop": "-1px",
                            },
                          },
                        },
                      ],
                    }
                  }
                >
                  4-6 hrs
                </Separator>
              </StackItem>
            </Stack>
          </Stack>
        </StackItem>
        <StackItem>
          <StyledMessageBar
            messageBarType={3}
          >
            <Text
              styles={
                Object {
                  "root": Object {
                    "color": "windowtext",
                    "fontSize": 14,
                  },
                }
              }
            >
              You are not able to lower throughput below your current minimum of 
              10000
               RU/s. For more information on this limit, please refer to our service quote documentation.
              <StyledLinkBase
                href="https://learn.microsoft.com/en-us/azure/cosmos-db/concepts-limits#minimum-throughput-limits"
                target="_blank"
              >
                Learn more
              </StyledLinkBase>
            </Text>
          </StyledMessageBar>
        </StackItem>
        <StackItem>
          <Text>
            Estimate your required throughput with
            <StyledLinkBase
              href="https://cosmos.azure.com/capacitycalculator/"
              target="_blank"
            >
               capacity calculator
               
              <FontIcon
                iconName="NavigateExternalInline"
              />
            </StyledLinkBase>
          </Text>
        </StackItem>
        <StackItem />
        <StackItem>
          <StyledCheckboxBase
            checked={false}
            id="spendAckCheckBox"
            label="spendAckText"
            onChange={[Function]}
            styles={
              Object {
                "label": Object {
                  "margin": 0,
                  "padding": "2 0 2 0",
                },
                "text": Object {
                  "fontSize": 12,
                },
              }
            }
          />
        </StackItem>
        <StackItem />
      </Stack>
    </StackItem>
    <StackItem
      style={
        Object {
          "maxWidth": "300px",
          "width": "30%",
        }
      }
    >
      <Stack>
        <Text
          style={
            Object {
              "fontWeight": 600,
            }
          }
        >
          Cost estimate*
        </Text>
        <Stack
          style={
            Object {
              "marginTop": 15,
            }
          }
          tokens={
            Object {
              "childrenGap": 10,
            }
          }
        >
          <Text
            style={
              Object {
                "fontWeight": 600,
              }
            }
          >
            Current cost per month
          </Text>
          <Stack
            horizontal={true}
            style={
              Object {
                "marginTop": 5,
              }
            }
          >
            <Text
              style={
                Object {
                  "width": "33%",
                }
              }
            >
              $
               
              0.012
              /hr
            </Text>
            <Text
              style={
                Object {
                  "width": "33%",
                }
              }
            >
              $
               
              0.29
              /day
            </Text>
            <Text
              style={
                Object {
                  "width": "33%",
                }
              }
            >
              $
               
              8.76
              /mo
            </Text>
          </Stack>
        </Stack>
        <Text
          style={
            Object {
              "fontWeight": 600,
              "marginTop": 15,
            }
          }
        >
          How we calculate this
        </Text>
        <Stack
          id="throughputSpendElement"
          style={
            Object {
              "marginTop": 5,
            }
          }
        >
          <span>
            1
             region
          </span>
          <span>
            100
             RU/s
          </span>
          <span>
            $
            0.00008
            /RU
          </span>
        </Stack>
        <Text
          style={
            Object {
              "marginTop": 15,
            }
          }
        >
          <em>
            *
            This cost is an estimate and may vary based on the regions where your account is deployed and potential discounts applied to your account
          </em>
        </Text>
      </Stack>
    </StackItem>
  </Stack>
</Stack>
`;

exports[`ThroughputInputAutoPilotV3Component throughput input visible 1`] = `
<Stack
  tokens={
    Object {
      "childrenGap": 10,
    }
  }
>
  <Stack>
    <StyledLabelBase
      id="settingsV2RadioButtonLabelId"
    >
      <ToolTipLabelComponent
        label="label"
        toolTipElement={
          <Text
            styles={
              Object {
                "root": Object {
                  "color": "windowtext",
                  "fontSize": 14,
                },
              }
            }
          >
            infoBubbleText
          </Text>
        }
      />
    </StyledLabelBase>
    <StyledChoiceGroup
      ariaLabelledBy="settingsV2RadioButtonLabelId"
      onChange={[Function]}
      options={
        Array [
          Object {
            "key": "true",
            "text": "Autoscale",
          },
          Object {
            "key": "false",
            "text": "Manual",
          },
        ]
      }
      required={true}
      selectedKey="false"
      styles={
        Object {
          "flexContainer": Array [
            Object {
              "columnGap": "30px",
              "display": "inline-flex",
              "selectors": Object {
                ".ms-ChoiceField-field.is-checked::after": Object {
                  "borderColor": "",
                },
                ".ms-ChoiceField-field.is-checked::before": Object {
                  "borderColor": "",
                },
                ".ms-ChoiceField-wrapper label": Object {
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "padding": "2px 5px",
                  "whiteSpace": "nowrap",
                },
              },
            },
          ],
        }
      }
    />
  </Stack>
  <Stack
    horizontal={true}
  >
    <StackItem
      style={
        Object {
          "maxWidth": "700px",
          "width": "70%",
        }
      }
    >
      <Stack
        style={
          Object {
            "paddingRight": "50px",
          }
        }
        tokens={
          Object {
            "childrenGap": 20,
          }
        }
      >
        <StackItem>
          <StyledTextFieldBase
            disabled={false}
            id="throughputInput"
            key="provisioned throughput input"
            min={10000}
            onChange={[Function]}
            required={true}
            step={100}
            styles={
              Object {
                "fieldGroup": Object {
                  "borderColor": "",
                  "height": 25,
                  "selectors": Object {
                    ":disabled": Object {
                      "backgroundColor": undefined,
                      "borderColor": undefined,
                    },
                  },
                  "width": 300,
                },
              }
            }
            type="number"
            value="100"
          />
        </StackItem>
        <StackItem>
          <Stack>
            <Stack
              horizontal={true}
            >
              <StackItem
                style={
                  Object {
                    "width": "34%",
                  }
                }
              >
                <span>
                  10000
                </span>
              </StackItem>
              <StackItem
                style={
                  Object {
                    "width": "66%",
                  }
                }
              >
                <span
                  style={
                    Object {
                      "float": "left",
                      "transform": "translateX(-50%)",
                    }
                  }
                >
                  5000
                </span>
                <span
                  style={
                    Object {
                      "float": "right",
                    }
                  }
                >
                  1000000
                </span>
              </StackItem>
            </Stack>
            <StyledProgressIndicatorBase
              barHeight={20}
              percentComplete={0}
              styles={
                Object {
                  "progressBar": Array [
                    Object {
                      "backgroundColor": "rgb(251, 217, 203)",
                    },
                  ],
                }
              }
            />
            <Stack
              horizontal={true}
            >
              <StackItem
                style={
                  Object {
                    "paddingRight": "5px",
                    "width": "34%",
                  }
                }
              >
                <Separator
                  styles={
                    Object {
                      "root": Array [
                        Object {
                          "selectors": Object {
                            "::before": Object {
                              "backgroundColor": "rgb(200, 200, 200)",
                              "height": "3px",
                              "marginTop": "-1px",
                            },
                          },
                        },
                      ],
                    }
                  }
                >
                  Instant
                </Separator>
              </StackItem>
              <StackItem
                style={
                  Object {
                    "paddingLeft": "5px",
                    "width": "66%",
                  }
                }
              >
                <Separator
                  styles={
                    Object {
                      "root": Array [
                        Object {
                          "selectors": Object {
                            "::before": Object {
                              "backgroundColor": "rgb(200, 200, 200)",
                              "height": "3px",
                              "marginTop": "-1px",
                            },
                          },
                        },
                      ],
                    }
                  }
                >
                  4-6 hrs
                </Separator>
              </StackItem>
            </Stack>
          </Stack>
        </StackItem>
        <StackItem>
          <StyledMessageBar
            messageBarType={3}
          >
            <Text
              styles={
                Object {
                  "root": Object {
                    "color": "windowtext",
                    "fontSize": 14,
                  },
                }
              }
            >
              You are not able to lower throughput below your current minimum of 
              10000
               RU/s. For more information on this limit, please refer to our service quote documentation.
              <StyledLinkBase
                href="https://learn.microsoft.com/en-us/azure/cosmos-db/concepts-limits#minimum-throughput-limits"
                target="_blank"
              >
                Learn more
              </StyledLinkBase>
            </Text>
          </StyledMessageBar>
        </StackItem>
        <StackItem>
          <Text>
            Estimate your required throughput with
            <StyledLinkBase
              href="https://cosmos.azure.com/capacitycalculator/"
              target="_blank"
            >
               capacity calculator
               
              <FontIcon
                iconName="NavigateExternalInline"
              />
            </StyledLinkBase>
          </Text>
        </StackItem>
        <StackItem />
        <StackItem />
      </Stack>
    </StackItem>
    <StackItem
      style={
        Object {
          "maxWidth": "300px",
          "width": "30%",
        }
      }
    >
      <Stack>
        <Text
          style={
            Object {
              "fontWeight": 600,
            }
          }
        >
          Cost estimate*
        </Text>
        <Stack
          style={
            Object {
              "marginTop": 15,
            }
          }
          tokens={
            Object {
              "childrenGap": 10,
            }
          }
        >
          <Text
            style={
              Object {
                "fontWeight": 600,
              }
            }
          >
            Current cost per month
          </Text>
          <Stack
            horizontal={true}
            style={
              Object {
                "marginTop": 5,
              }
            }
          >
            <Text
              style={
                Object {
                  "width": "33%",
                }
              }
            >
              $
               
              0.012
              /hr
            </Text>
            <Text
              style={
                Object {
                  "width": "33%",
                }
              }
            >
              $
               
              0.29
              /day
            </Text>
            <Text
              style={
                Object {
                  "width": "33%",
                }
              }
            >
              $
               
              8.76
              /mo
            </Text>
          </Stack>
        </Stack>
        <Text
          style={
            Object {
              "fontWeight": 600,
              "marginTop": 15,
            }
          }
        >
          How we calculate this
        </Text>
        <Stack
          id="throughputSpendElement"
          style={
            Object {
              "marginTop": 5,
            }
          }
        >
          <span>
            1
             region
          </span>
          <span>
            100
             RU/s
          </span>
          <span>
            $
            0.00008
            /RU
          </span>
        </Stack>
        <Text
          style={
            Object {
              "marginTop": 15,
            }
          }
        >
          <em>
            *
            This cost is an estimate and may vary based on the regions where your account is deployed and potential discounts applied to your account
          </em>
        </Text>
      </Stack>
    </StackItem>
  </Stack>
</Stack>
`;
