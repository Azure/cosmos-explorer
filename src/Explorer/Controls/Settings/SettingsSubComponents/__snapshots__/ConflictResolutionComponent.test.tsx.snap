// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ConflictResolutionComponent Path text field displayed 1`] = `
<Stack
  tokens={
    {
      "childrenGap": 20,
    }
  }
>
  <StyledChoiceGroup
    label="Mode"
    onChange={[Function]}
    options={
      [
        {
          "key": "LastWriterWins",
          "text": "Last Write Wins (default)",
        },
        {
          "key": "Custom",
          "text": "Merge Procedure (custom)",
        },
      ]
    }
    selectedKey="LastWriterWins"
    styles={
      {
        "flexContainer": [
          {
            "columnGap": "default",
            "display": "default",
            "selectors": {
              ".ms-ChoiceField-field.is-checked::after": {
                "borderColor": undefined,
              },
              ".ms-ChoiceField-field.is-checked::before": {
                "borderColor": undefined,
              },
              ".ms-ChoiceField-field:hover .ms-ChoiceFieldLabel": {
                "color": "var(--colorNeutralForeground1)",
              },
              ".ms-ChoiceField-wrapper label": {
                "color": "var(--colorNeutralForeground1)",
                "fontFamily": undefined,
                "fontSize": 14,
                "padding": "2px 5px",
                "whiteSpace": "nowrap",
              },
              ".ms-ChoiceFieldLabel": {
                "color": "var(--colorNeutralForeground1)",
              },
              ".ms-ChoiceFieldLabel:hover": {
                "color": "var(--colorNeutralForeground1)",
              },
            },
          },
        ],
        "label": {
          "color": "var(--colorNeutralForeground1)",
        },
        "root": {
          "selectors": {
            ".ms-ChoiceField-field:hover .ms-ChoiceFieldLabel": {
              "color": "var(--colorNeutralForeground1)",
            },
            ".ms-ChoiceField-innerField": {
              "color": "var(--colorNeutralForeground1)",
            },
            ".ms-ChoiceField:hover .ms-ChoiceField-innerField": {
              "color": "var(--colorNeutralForeground1)",
            },
            ".ms-ChoiceField:hover .ms-ChoiceFieldLabel": {
              "color": "var(--colorNeutralForeground1)",
            },
            ".ms-ChoiceFieldLabel": {
              "color": "var(--colorNeutralForeground1)",
            },
          },
        },
      }
    }
  />
  <StyledTextFieldBase
    id="conflictResolutionLwwTextField"
    label="Conflict Resolver Property"
    onChange={[Function]}
    onRenderLabel={[Function]}
    styles={
      {
        "fieldGroup": {
          "borderColor": "",
          "height": 25,
          "selectors": {
            ":disabled": {
              "backgroundColor": "var(--colorNeutralBackground1)",
              "borderColor": undefined,
            },
            "input#autopilotInput": {
              "backgroundColor": "var(--colorNeutralBackground4)",
              "color": "var(--colorNeutralForeground1)",
            },
          },
          "width": 300,
        },
        "subComponentStyles": {
          "label": {
            "root": {
              "color": "var(--colorNeutralForeground1)",
            },
          },
        },
      }
    }
    value=""
  />
</Stack>
`;

exports[`ConflictResolutionComponent Sproc text field displayed 1`] = `
<Stack
  tokens={
    {
      "childrenGap": 20,
    }
  }
>
  <StyledChoiceGroup
    label="Mode"
    onChange={[Function]}
    options={
      [
        {
          "key": "LastWriterWins",
          "text": "Last Write Wins (default)",
        },
        {
          "key": "Custom",
          "text": "Merge Procedure (custom)",
        },
      ]
    }
    selectedKey="Custom"
    styles={
      {
        "flexContainer": [
          {
            "columnGap": "default",
            "display": "default",
            "selectors": {
              ".ms-ChoiceField-field.is-checked::after": {
                "borderColor": "",
              },
              ".ms-ChoiceField-field.is-checked::before": {
                "borderColor": "",
              },
              ".ms-ChoiceField-field:hover .ms-ChoiceFieldLabel": {
                "color": "var(--colorNeutralForeground1)",
              },
              ".ms-ChoiceField-wrapper label": {
                "color": "var(--colorNeutralForeground1)",
                "fontFamily": undefined,
                "fontSize": 14,
                "padding": "2px 5px",
                "whiteSpace": "nowrap",
              },
              ".ms-ChoiceFieldLabel": {
                "color": "var(--colorNeutralForeground1)",
              },
              ".ms-ChoiceFieldLabel:hover": {
                "color": "var(--colorNeutralForeground1)",
              },
            },
          },
        ],
        "label": {
          "color": "var(--colorNeutralForeground1)",
        },
        "root": {
          "selectors": {
            ".ms-ChoiceField-field:hover .ms-ChoiceFieldLabel": {
              "color": "var(--colorNeutralForeground1)",
            },
            ".ms-ChoiceField-innerField": {
              "color": "var(--colorNeutralForeground1)",
            },
            ".ms-ChoiceField:hover .ms-ChoiceField-innerField": {
              "color": "var(--colorNeutralForeground1)",
            },
            ".ms-ChoiceField:hover .ms-ChoiceFieldLabel": {
              "color": "var(--colorNeutralForeground1)",
            },
            ".ms-ChoiceFieldLabel": {
              "color": "var(--colorNeutralForeground1)",
            },
          },
        },
      }
    }
  />
  <StyledTextFieldBase
    id="conflictResolutionCustomTextField"
    label="Stored procedure"
    onChange={[Function]}
    onRenderLabel={[Function]}
    styles={
      {
        "fieldGroup": {
          "borderColor": "",
          "height": 25,
          "selectors": {
            ":disabled": {
              "backgroundColor": "var(--colorNeutralBackground1)",
              "borderColor": undefined,
            },
            "input#autopilotInput": {
              "backgroundColor": "var(--colorNeutralBackground4)",
              "color": "var(--colorNeutralForeground1)",
            },
          },
          "width": 300,
        },
        "subComponentStyles": {
          "label": {
            "root": {
              "color": "var(--colorNeutralForeground1)",
            },
          },
        },
      }
    }
    value=""
  />
</Stack>
`;
