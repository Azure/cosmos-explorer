// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`PartitionKeyComponent renders default component and matches snapshot 1`] = `
<Stack
  styles={
    {
      "root": {
        "maxWidth": 600,
      },
    }
  }
  tokens={
    {
      "childrenGap": 20,
    }
  }
>
  <Stack
    tokens={
      {
        "childrenGap": 10,
      }
    }
  >
    <Text
      styles={
        {
          "root": {
            "fontSize": 16,
            "fontWeight": 600,
          },
        }
      }
    >
      Change 
      partition key
    </Text>
    <Stack
      horizontal={true}
      tokens={
        {
          "childrenGap": 20,
        }
      }
    >
      <Stack
        tokens={
          {
            "childrenGap": 5,
          }
        }
      >
        <Text
          styles={
            {
              "root": {
                "fontWeight": 600,
              },
            }
          }
        >
          Current 
          partition key
        </Text>
        <Text
          styles={
            {
              "root": {
                "fontWeight": 600,
              },
            }
          }
        >
          Partitioning
        </Text>
      </Stack>
      <Stack
        tokens={
          {
            "childrenGap": 5,
          }
        }
      >
        <Text />
        <Text>
          Non-hierarchical
        </Text>
      </Stack>
    </Stack>
  </Stack>
  <StyledMessageBar
    messageBarType={5}
  >
    To safeguard the integrity of the data being copied to the new container, ensure that no updates are made to the source container for the entire duration of the partition key change process.
    <StyledLinkBase
      href="https://learn.microsoft.com/azure/cosmos-db/container-copy#how-does-container-copy-work"
      target="_blank"
      underline={true}
    >
      Learn more
    </StyledLinkBase>
  </StyledMessageBar>
  <Text>
    To change the partition key, a new destination container must be created or an existing destination container selected. Data will then be copied to the destination container.
  </Text>
  <CustomizedPrimaryButton
    onClick={[Function]}
    styles={
      {
        "root": {
          "width": "fit-content",
        },
      }
    }
    text="Change"
  />
</Stack>
`;

exports[`PartitionKeyComponent renders read-only component and matches snapshot 1`] = `
<Stack
  styles={
    {
      "root": {
        "maxWidth": 600,
      },
    }
  }
  tokens={
    {
      "childrenGap": 20,
    }
  }
>
  <Stack
    tokens={
      {
        "childrenGap": 10,
      }
    }
  >
    <Stack
      horizontal={true}
      tokens={
        {
          "childrenGap": 20,
        }
      }
    >
      <Stack
        tokens={
          {
            "childrenGap": 5,
          }
        }
      >
        <Text
          styles={
            {
              "root": {
                "fontWeight": 600,
              },
            }
          }
        >
          Current 
          partition key
        </Text>
        <Text
          styles={
            {
              "root": {
                "fontWeight": 600,
              },
            }
          }
        >
          Partitioning
        </Text>
      </Stack>
      <Stack
        tokens={
          {
            "childrenGap": 5,
          }
        }
      >
        <Text />
        <Text>
          Non-hierarchical
        </Text>
      </Stack>
    </Stack>
  </Stack>
</Stack>
`;
