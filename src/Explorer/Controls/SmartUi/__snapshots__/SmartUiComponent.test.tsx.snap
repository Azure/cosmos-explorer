// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`SmartUiComponent should render 1`] = `
<Stack
  styles={
    Object {
      "root": Object {
        "padding": 10,
        "width": 400,
      },
    }
  }
  tokens={
    Object {
      "childrenGap": 20,
    }
  }
>
  <Stack
    className="widgetRendererContainer"
    tokens={
      Object {
        "childrenGap": 15,
      }
    }
  >
    <StackItem>
      <StyledMessageBarBase>
        Start at $24/mo per database
        <StyledLinkBase
          href="https://aka.ms/azure-cosmos-db-pricing"
          target="_blank"
        >
          More Details
        </StyledLinkBase>
      </StyledMessageBarBase>
    </StackItem>
    <div
      key="throughput"
    >
      <Stack
        className="widgetRendererContainer"
        tokens={
          Object {
            "childrenGap": 15,
          }
        }
      >
        <StackItem>
          <CustomizedSpinButton
            ariaLabel="Throughput (input)"
            decrementButtonIcon={
              Object {
                "iconName": "ChevronDownSmall",
              }
            }
            disabled={false}
            id="throughput-spinner-input"
            incrementButtonIcon={
              Object {
                "iconName": "ChevronUpSmall",
              }
            }
            label="Throughput (input)"
            labelPosition={0}
            max={500}
            min={400}
            onDecrement={[Function]}
            onIncrement={[Function]}
            onValidate={[Function]}
            step={10}
            styles={
              Object {
                "label": Object {
                  "color": "#393939",
                  "fontFamily": "wf_segoe-ui_normal, 'Segoe UI', 'Segoe WP', Tahoma, Arial, sans-serif",
                  "fontSize": 12,
                  "fontWeight": 600,
                },
              }
            }
          />
        </StackItem>
      </Stack>
    </div>
    <div
      key="throughput2"
    >
      <Stack
        className="widgetRendererContainer"
        tokens={
          Object {
            "childrenGap": 15,
          }
        }
      >
        <StackItem>
          <div
            id="throughput2-slider-input"
          >
            <StyledSliderBase
              ariaLabel="Throughput (Slider)"
              label="Throughput (Slider)"
              max={500}
              min={400}
              onChange={[Function]}
              step={10}
              styles={
                Object {
                  "titleLabel": Object {
                    "color": "#393939",
                    "fontFamily": "wf_segoe-ui_normal, 'Segoe UI', 'Segoe WP', Tahoma, Arial, sans-serif",
                    "fontSize": 12,
                    "fontWeight": 600,
                  },
                  "valueLabel": Object {
                    "color": "#393939",
                    "fontFamily": "wf_segoe-ui_normal, 'Segoe UI', 'Segoe WP', Tahoma, Arial, sans-serif",
                    "fontSize": 12,
                  },
                }
              }
            />
          </div>
        </StackItem>
      </Stack>
    </div>
    <div
      key="throughput3"
    >
      <Stack
        className="widgetRendererContainer"
        tokens={
          Object {
            "childrenGap": 15,
          }
        }
      >
        <StackItem>
          <StyledMessageBarBase
            messageBarType={1}
          >
            Error: 
            label, truelabel and falselabel are required for boolean input 'throughput3'
          </StyledMessageBarBase>
        </StackItem>
      </Stack>
    </div>
    <div
      key="containerId"
    >
      <Stack
        className="widgetRendererContainer"
        tokens={
          Object {
            "childrenGap": 15,
          }
        }
      >
        <StackItem>
          <div
            className="stringInputContainer"
          >
            <StyledTextFieldBase
              id="containerId-textBox-input"
              label="Container id"
              onChange={[Function]}
              styles={
                Object {
                  "subComponentStyles": Object {
                    "label": Object {
                      "root": Object {
                        "color": "#393939",
                        "fontFamily": "wf_segoe-ui_normal, 'Segoe UI', 'Segoe WP', Tahoma, Arial, sans-serif",
                        "fontSize": 12,
                        "fontWeight": 600,
                      },
                    },
                  },
                }
              }
              type="text"
            />
          </div>
        </StackItem>
      </Stack>
    </div>
    <div
      key="analyticalStore"
    >
      <Stack
        className="widgetRendererContainer"
        tokens={
          Object {
            "childrenGap": 15,
          }
        }
      >
        <StackItem>
          <div
            id="analyticalStore-radioSwitch-input"
          >
            <div
              className="inputLabelContainer"
            >
              <Text
                className="inputLabel"
                nowrap={true}
                variant="small"
              >
                Analytical Store
              </Text>
            </div>
            <RadioSwitchComponent
              choices={
                Array [
                  Object {
                    "key": "false",
                    "label": "Disabled",
                    "onSelect": [Function],
                  },
                  Object {
                    "key": "true",
                    "label": "Enabled",
                    "onSelect": [Function],
                  },
                ]
              }
              selectedKey="true"
            />
          </div>
        </StackItem>
      </Stack>
    </div>
    <div
      key="database"
    >
      <Stack
        className="widgetRendererContainer"
        tokens={
          Object {
            "childrenGap": 15,
          }
        }
      >
        <StackItem>
          <StyledWithResponsiveMode
            id="database-dropown-input"
            label="Database"
            onChange={[Function]}
            options={
              Array [
                Object {
                  "key": "db1",
                  "text": "Database 1",
                },
                Object {
                  "key": "db2",
                  "text": "Database 2",
                },
                Object {
                  "key": "db3",
                  "text": "Database 3",
                },
              ]
            }
            selectedKey="db2"
            styles={
              Object {
                "dropdown": Object {
                  "color": "#393939",
                  "fontFamily": "wf_segoe-ui_normal, 'Segoe UI', 'Segoe WP', Tahoma, Arial, sans-serif",
                  "fontSize": 12,
                },
                "label": Object {
                  "color": "#393939",
                  "fontFamily": "wf_segoe-ui_normal, 'Segoe UI', 'Segoe WP', Tahoma, Arial, sans-serif",
                  "fontSize": 12,
                  "fontWeight": 600,
                },
              }
            }
          />
        </StackItem>
      </Stack>
    </div>
  </Stack>
</Stack>
`;
