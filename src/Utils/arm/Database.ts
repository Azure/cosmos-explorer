/* 
  AUTOGENERATED FILE
  Do not manually edit
  Run "npm run generateARMClients" to regenerate
*/

import * as Types from "./types";

export class DatabaseClient {
  private readonly baseUrl = "https://management.azure.com";
  private readonly basePath = `/subscriptions/${this.subscriptionId}/resourceGroups/${this.resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/${this.accountName}/databases/${this.databaseRid}/`;

  constructor(
    private readonly subscriptionId: string,
    private readonly resourceGroupName: string,
    private readonly accountName: string,
    private readonly databaseRid: string
  ) {}

  /* Retrieves metric definitions for the given database. */
  async listMetricDefinitions(): Promise<Types.MetricDefinitionsListResult> {
    const path = `metricDefinitions`;
    return window.fetch(this.baseUrl + this.basePath + path, { method: "get" }).then(response => response.json());
  }

  /* Retrieves the metrics determined by the given filter for the given database account and database. */
  async listMetrics(): Promise<Types.MetricListResult> {
    const path = `metrics`;
    return window.fetch(this.baseUrl + this.basePath + path, { method: "get" }).then(response => response.json());
  }

  /* Retrieves the usages (most recent data) for the given database. */
  async listUsages(): Promise<Types.UsagesResult> {
    const path = `usages`;
    return window.fetch(this.baseUrl + this.basePath + path, { method: "get" }).then(response => response.json());
  }
}
