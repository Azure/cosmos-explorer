/* 
  AUTOGENERATED FILE
  Do not manually edit
  Run "npm run generateARMClients" to regenerate
*/

import * as Types from "./types";

export class RestorableDatabaseAccountsClient {
  private readonly baseUrl = "https://management.azure.com";
  private readonly basePath = `/subscriptions/${this.subscriptionId}/providers/Microsoft.DocumentDB/`;

  constructor(private readonly subscriptionId: string) {}

  /* Lists all the restorable Azure Cosmos DB database accounts available under the subscription and in a region. */
  async listByLocation(
    location: string
  ): Promise<Types.RestorableDatabaseAccountsListResult | Types.ErrorResponseUpdatedFormat> {
    const path = `locations/${location}/restorableDatabaseAccounts`;
    return window.fetch(this.baseUrl + this.basePath + path, { method: "get" }).then(response => response.json());
  }

  /* Retrieves the properties of an existing Azure Cosmos DB restorable database account. */
  async getByLocation(
    location: string,
    instanceId: string
  ): Promise<Types.RestorableDatabaseAccountGetResult | Types.ErrorResponseUpdatedFormat> {
    const path = `locations/${location}/restorableDatabaseAccounts/${instanceId}`;
    return window.fetch(this.baseUrl + this.basePath + path, { method: "get" }).then(response => response.json());
  }

  /* Lists all the restorable Azure Cosmos DB database accounts available under the subscription. */
  async list(): Promise<Types.RestorableDatabaseAccountsListResult | Types.ErrorResponseUpdatedFormat> {
    const path = `restorableDatabaseAccounts`;
    return window.fetch(this.baseUrl + this.basePath + path, { method: "get" }).then(response => response.json());
  }
}
